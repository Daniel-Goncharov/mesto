(()=>{"use strict";var e="element__like-button_active",t=".popup_type_profile",n=".profile__name",r=".profile__job",o=".popup_type_add-card",i="popup_opened",u=".popup__button",a=".popup_type_view-picture",c=".popup__picture",s=".popup__picture-title",l={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},p=document.querySelector(".popup__form_type_profile"),f=document.querySelector(".popup__form_type_add-avatar"),h=document.querySelector(".profile__avatar-button"),d=document.querySelector(".profile__edit-button"),_=(document.querySelector(t).querySelector(u),document.querySelector(".popup__input_data_name")),y=document.querySelector(".popup__input_data_job"),b=(document.querySelector(n),document.querySelector(r),document.querySelector(".popup__form_type_add-card")),v=document.querySelector(".profile__add-button");function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}document.querySelector(o),document.querySelector(".popup__input_data_place-name"),document.querySelector(".popup__input_data_place-url"),document.querySelector(a),document.querySelector(c),document.querySelector(s);var k=function(){function e(t){var n,r,o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=function(e){"Escape"===e.key&&o.closePopup()},(n="_closePopupOnEsc")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._popupSelector=t,this._popup=document.querySelector(t),this._closePopupOnEsc=this._closePopupOnEsc.bind(this)}var t,n;return t=e,(n=[{key:"openPopup",value:function(){this._popup.classList.add(i),document.addEventListener("keydown",this._closePopupOnEsc)}},{key:"closePopup",value:function(){this._popup.classList.remove(i),document.removeEventListener("keydown",this._closePopupOnEsc)}},{key:"_closePopupByClick",value:function(e){(e.target.classList.contains("popup__closed-button")||e.target.classList.contains("popup"))&&this.closePopup()}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("click",(function(t){e._closePopupByClick(t)}))}}])&&m(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function S(e){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},S(e)}function g(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function E(){return E="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=w(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},E.apply(this,arguments)}function w(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=L(e)););return e}function P(e,t){return P=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},P(e,t)}function O(e,t){if(t&&("object"===S(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function L(e){return L=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},L(e)}var C=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&P(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=L(r);if(o){var n=L(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return O(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e))._popupImgPicture=t._popup.querySelector(c),t._titleOfPopupImg=t._popup.querySelector(s),t}return t=u,(n=[{key:"openPopup",value:function(e,t){E(L(u.prototype),"openPopup",this).call(this),this._popupImgPicture.alt=e,this._titleOfPopupImg.textContent=e,this._popupImgPicture.src=t}}])&&g(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(k);function j(e){return j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},j(e)}function I(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function B(){return B="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=q(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},B.apply(this,arguments)}function q(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=x(e)););return e}function R(e,t){return R=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},R(e,t)}function T(e,t){if(t&&("object"===j(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function x(e){return x=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},x(e)}var U=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&R(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=x(r);if(o){var n=x(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return T(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._handleSubmitForm=t,n._form=n._popup.querySelector(".popup__form"),n._submitButton=n._form.querySelector(u),n._permanentText=n._submitButton.textContent,n._inputList=Array.from(n._popup.querySelectorAll(".popup__input")),n}return t=a,(n=[{key:"closePopup",value:function(){this._form.reset(),B(x(a.prototype),"closePopup",this).call(this)}},{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;B(x(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleSubmitForm(e._getInputValues())}))}},{key:"renderLoading",value:function(e){this._submitButton.textContent=e?"Сохранение...":this._permanentText}}])&&I(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(k);function A(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var V=function(){function t(e,n,r,o,i,u){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._data=e,this.cardId=e._id,this._name=e.name,this._link=e.link,this._likes=e.likes,this._ownerId=e.owner._id,this._handleOpenBigImage=n,this._handleLikeClick=r,this._handleTrashBinClick=o,this._templateSelector=i,this._myId=u}var n,r;return n=t,(r=[{key:"_getCardElement",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".element").cloneNode(!0)}},{key:"updateLikeCounter",value:function(e){this._likes=e.likes}},{key:"updateLikesView",value:function(){this._likeCounter.textContent=this._likes.length,this.isLiked()?this._likeButton.classList.add(e):this._likeButton.classList.remove(e)}},{key:"isLiked",value:function(){var e=this;return this._likes.some((function(t){return t._id===e._myId}))}},{key:"generateCard",value:function(){return this._cardElement=this._getCardElement(),this._cardPicture=this._cardElement.querySelector(".element__picture"),this._cardTitle=this._cardElement.querySelector(".element__title"),this._cardPicture.src=this._link,this._cardPicture.alt=this._name,this._cardTitle.textContent=this._name,this._trashBin=this._cardElement.querySelector(".element__delete"),this._likeCounter=this._cardElement.querySelector(".element__like-counter"),this._likeButton=this._cardElement.querySelector(".element__like-button"),this._likeCounter.textContent=this._likes.length,this._ownerId!=this._myId&&this._trashBin.remove(),this.isLiked()&&this._likeButton.classList.add(e),this._setEventListeners(),this._cardElement}},{key:"_setEventListeners",value:function(){var e=this;this._cardPicture.addEventListener("click",(function(){return e._handleOpenBigImage(e._name,e._link)})),this._likeButton.addEventListener("click",(function(){return e._handleLikeClick(e)})),this._trashBin.addEventListener("click",(function(){return e._handleTrashBinClick(e)}))}},{key:"deleteCard",value:function(){this._cardElement.remove(),this._cardElement=null}}])&&A(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function D(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var F=function(){function e(t,n){var r,o,i=this,u=t.formSelector,a=t.inputSelector,c=t.submitButtonSelector,s=t.inactiveButtonClass,l=t.inputErrorClass,p=t.errorClass;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),o=function(){return i._inputList.some((function(e){return!e.validity.valid}))},(r="_hasInvalidInput")in this?Object.defineProperty(this,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):this[r]=o,this._formSelector=u,this._inputSelector=a,this._submitButtonSelector=c,this._inactiveButtonClass=s,this._inputErrorClass=l,this._errorClass=p,this._formEl=n,this._inputList=Array.from(this._formEl.querySelectorAll(this._inputSelector)),this._buttonElement=this._formEl.querySelector(this._submitButtonSelector)}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e,t){var n=this._formEl.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),n.classList.add(this._errorClass),n.textContent=t}},{key:"_hideInputError",value:function(e){var t=this._formEl.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_disableButtonState",value:function(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.setAttribute("disabled","disabled")}},{key:"_enableButtonState",value:function(){this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.removeAttribute("disabled")}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this._disableButtonState():this._enableButtonState()}},{key:"resetForm",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t)}))}},{key:"_setEventListeners",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._formEl.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners(this._formEl)}}])&&D(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function N(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var J=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){var n=t._renderer(e);t.addAppendItem(n)}))}},{key:"addAppendItem",value:function(e){this._container.append(e)}},{key:"addPrependItem",value:function(e){this._container.prepend(e)}}])&&N(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function M(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var G=function(){function e(t){var n=t.userNameSelector,r=t.userJobSelector,o=t.userAvatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userNameSelector=document.querySelector(n),this._userJobSelector=document.querySelector(r),this._avatarSelector=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._userNameSelector.textContent,about:this._userJobSelector.textContent,avatar:this._avatarSelector.src}}},{key:"setUserInfo",value:function(e){this._myId=e._id,this._userNameSelector.textContent=e.name,this._userJobSelector.textContent=e.about,this._avatarSelector.src=e.avatar}},{key:"returnMyId",value:function(){return this._myId}}])&&M(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function H(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var z=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=t.baseUrl,this._headers=t.headers}var t,n;return t=e,(n=[{key:"_checkResponse",value:function(e){return e.ok?e.json():Promise.reject("Упс, ошибка ".concat(e.status,", что-то пошло не так."))}},{key:"getUserInfo",value:function(){return fetch("".concat(this._baseUrl,"users/me"),{method:"GET",headers:this._headers}).then(this._checkResponse)}},{key:"changeUserInfo",value:function(e){var t=e.name,n=e.about;return fetch("".concat(this._baseUrl,"users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:n})}).then(this._checkResponse)}},{key:"changeAvatar",value:function(e){var t=e.avatar;return fetch("".concat(this._baseUrl,"users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then(this._checkResponse)}},{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"cards"),{method:"GET",headers:this._headers}).then(this._checkResponse)}},{key:"addCardServer",value:function(e){return fetch("".concat(this._baseUrl,"cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then(this._checkResponse)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._baseUrl,"cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"addLikeToCard",value:function(e){return fetch("".concat(this._baseUrl,"cards/").concat(e,"/likes"),{method:"PUT",headers:this._headers}).then(this._checkResponse)}},{key:"deleteLikeFromCard",value:function(e){return fetch("".concat(this._baseUrl,"cards/").concat(e,"/likes"),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}}])&&H(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function $(e){return $="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},$(e)}function K(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Q(){return Q="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=W(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},Q.apply(this,arguments)}function W(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=Z(e)););return e}function X(e,t){return X=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},X(e,t)}function Y(e,t){if(t&&("object"===$(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function Z(e){return Z=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Z(e)}var ee=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&X(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=Z(r);if(o){var n=Z(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return Y(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._form=n._popup.querySelector(".popup__container_type_delete"),n._submitButton=n._form.querySelector(u),n._handleSubmitForm=t,n._permanentText=n._submitButton.textContent,n}return t=a,(n=[{key:"openPopup",value:function(e){Q(Z(a.prototype),"openPopup",this).call(this),this._card=e}},{key:"renderLoading",value:function(e){this._submitButton.textContent=e?"Удаление...":this._permanentText}},{key:"setEventListeners",value:function(){var e=this;this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleSubmitForm(e._card)})),Q(Z(a.prototype),"setEventListeners",this).call(this)}}])&&K(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(k);function te(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var ne=new z({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-51/",headers:{authorization:"bfa40ffc-a9e7-4ab6-8334-2b3f41f7694b","content-Type":"application/json"}});Promise.all([ne.getUserInfo(),ne.getInitialCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],u=!0,a=!1;try{for(n=n.call(e);!(u=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);u=!0);}catch(e){a=!0,o=e}finally{try{u||null==n.return||n.return()}finally{if(a)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return te(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?te(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];ae.setUserInfo(o),re.renderItems(i)})).catch((function(e){alert(e)}));var re=new J({renderer:ce},".elements__container"),oe=new F(l,p);oe.enableValidation();var ie=new F(l,b);ie.enableValidation();var ue=new F(l,f);ue.enableValidation();var ae=new G({userNameSelector:n,userJobSelector:r,userAvatarSelector:".profile__pic"});function ce(e){return new V(e,de,_e,ye,".template",ae.returnMyId()).generateCard()}var se=new C(a);se.setEventListeners();var le=new U(t,(function(e){le.renderLoading(!0),ne.changeUserInfo(e).then((function(e){ae.setUserInfo(e),le.closePopup()})).catch((function(e){alert(e)})).finally((function(){le.renderLoading(!1)}))}));le.setEventListeners();var pe=new U(o,(function(e){pe.renderLoading(!0),ne.addCardServer(e).then((function(e){re.addPrependItem(ce(e)),pe.closePopup()})).catch((function(e){alert(e)})).finally((function(){pe.renderLoading(!1)}))}));pe.setEventListeners();var fe=new U(".popup_type_add-avatar",(function(e){fe.renderLoading(!0),ne.changeAvatar(e).then((function(e){ae.setUserInfo(e),fe.closePopup()})).catch((function(e){return console.log(e)})).finally((function(){fe.renderLoading(!1)}))}));fe.setEventListeners();var he=new ee(".popup_type_delete",(function(e){he.renderLoading(!0),ne.deleteCard(e.cardId).then((function(){e.deleteCard(),he.closePopup()})).catch((function(e){alert(e)})).finally((function(){he.renderLoading(!1)}))}));function de(e,t){se.openPopup(e,t)}function _e(e){e.isLiked()?ne.deleteLikeFromCard(e.cardId).then((function(t){e.updateLikeCounter(t),e.updateLikesView()})).catch((function(e){alert(e)})):ne.addLikeToCard(e.cardId).then((function(t){e.updateLikeCounter(t),e.updateLikesView()})).catch((function(e){alert(e)}))}function ye(e){he.openPopup(e)}he.setEventListeners(),h.addEventListener("click",(function(){ue.resetForm(),fe.openPopup()})),d.addEventListener("click",(function(){var e=ae.getUserInfo(),t=e.name,n=e.about;_.value=t,y.value=n,oe.resetForm(),le.openPopup()})),v.addEventListener("click",(function(){ie.resetForm(),pe.openPopup()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,