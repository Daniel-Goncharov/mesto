(()=>{"use strict";var e={702:(e,t,r)=>{e.exports=r.p+"d405847202d3f95a3ba4.jpg"},797:(e,t,r)=>{e.exports=r.p+"bef0a69870eb1682dc69.jpg"},146:(e,t,r)=>{e.exports=r.p+"1615d7b8c9a54a3510c8.jpg"},244:(e,t,r)=>{e.exports=r.p+"6027543b358557d3d0fc.jpg"},34:(e,t,r)=>{e.exports=r.p+"30318b1bb3277bcce528.jpg"},106:(e,t,r)=>{e.exports=r.p+"6af7abf475497bff5cb9.jpg"}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var i=t[n]={exports:{}};return e[n](i,i.exports,r),i.exports}r.m=e,r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.p="",r.b=document.baseURI||self.location.href,(()=>{var e=".element__like-button",t=".popup_type_profile",n=".profile__name",o=".profile__job",i=".popup_type_add-card",u="popup_opened",c=".popup_type_view-picture",a=".popup__picture",l=".popup__picture-title",s={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},p=document.querySelector(".popup__form_type_profile"),f=document.querySelector(".profile__edit-button"),_=(document.querySelector(t).querySelector(".popup__button"),document.querySelector(".popup__input_data_name")),y=document.querySelector(".popup__input_data_job"),d=(document.querySelector(n),document.querySelector(o),document.querySelector(".popup__form_type_add-card")),b=document.querySelector(".profile__add-button"),h=(document.querySelector(i),document.querySelector(".popup__input_data_place-name"),document.querySelector(".popup__input_data_place-url"),document.querySelector(c),document.querySelector(a),document.querySelector(l),[{place:"Бали",pictureUrl:new URL(r(702),r.b)},{place:"Калифорния",pictureUrl:new URL(r(106),r.b)},{place:"Иордания",pictureUrl:new URL(r(146),r.b)},{place:"Рим",pictureUrl:new URL(r(244),r.b)},{place:"Париж",pictureUrl:new URL(r(797),r.b)},{place:"Санкт-Петербург",pictureUrl:new URL(r(34),r.b)}]);function m(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function v(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var S=function(){function e(t){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),v(this,"_closePopupOnEsc",(function(e){"Escape"===e.key&&r.closePopup()})),v(this,"_closePopupByClick",(function(e){var t=e.target,n=t.closest(".popup");(t.classList.contains("popup__closed-button")||t===n)&&r.closePopup()})),this._popupSelector=t,this._popup=document.querySelector(t)}var t,r;return t=e,(r=[{key:"openPopup",value:function(){this._popup.classList.add(u),document.addEventListener("keydown",this._closePopupOnEsc)}},{key:"closePopup",value:function(){this._popup.classList.remove(u),document.removeEventListener("keydown",this._closePopupOnEsc)}},{key:"setEventListeners",value:function(){this._popup.addEventListener("click",this._closePopupByClick)}}])&&m(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function E(e){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},E(e)}function w(e,t){return w=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},w(e,t)}function g(e,t){if(t&&("object"===E(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return P(e)}function P(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function O(){return O="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=k(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},O.apply(this,arguments)}function k(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=j(e)););return e}function j(e){return j=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},j(e)}var L=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&w(e,t)}(i,e);var t,r,n,o=(r=i,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=j(r);if(n){var o=j(this).constructor;e=Reflect.construct(t,arguments,o)}else e=t.apply(this,arguments);return g(this,e)});function i(e){var t,r,n,u,c;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),c=function(e,n){r._popupImgPicture.src=e,r._popupImgPicture.alt=n,r._titleOfPopupImg.textContent=n,O((t=P(r),j(i.prototype)),"openPopup",t).call(t)},(u="openPopup")in(n=P(r=o.call(this,e)))?Object.defineProperty(n,u,{value:c,enumerable:!0,configurable:!0,writable:!0}):n[u]=c,r._popupImgPicture=r._popup.querySelector(a),r._titleOfPopupImg=r._popup.querySelector(l),r}return t=i,Object.defineProperty(t,"prototype",{writable:!1}),t}(S);function C(e){return C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},C(e)}function q(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function I(){return I="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=B(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},I.apply(this,arguments)}function B(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=U(e)););return e}function R(e,t){return R=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},R(e,t)}function x(e,t){if(t&&("object"===C(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function U(e){return U=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},U(e)}var V=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&R(e,t)}(u,e);var t,r,n,o,i=(n=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=U(n);if(o){var r=U(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return x(this,e)});function u(e,t){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(r=i.call(this,e))._handleSubmitForm=t,r._form=r._popup.querySelector(".popup__form"),r._inputList=Array.from(r._popup.querySelectorAll(".popup__input")),r}return t=u,(r=[{key:"closePopup",value:function(){I(U(u.prototype),"closePopup",this).call(this),this._form.reset()}},{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;I(U(u.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleSubmitForm(e._getInputValues())}))}}])&&q(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),u}(S);function T(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var A=function(){function t(e,r,n){var o=e.place,i=e.pictureUrl;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=o,this._link=i,this._templateSelector=r,this.handleOpenBigImage=n}var r,n;return r=t,(n=[{key:"_getCardElement",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".element").cloneNode(!0)}},{key:"generateCard",value:function(){return this._cardElement=this._getCardElement(),this.cardPicture=this._cardElement.querySelector(".element__picture"),this.cardPicture.src=this._link,this.cardPicture.alt=this._name,this._cardElement.querySelector(".element__title").textContent=this._name,this._setEventListeners(),this._cardElement}},{key:"_setEventListeners",value:function(){var t=this;this.cardPicture.addEventListener("click",(function(){return t._openViewPicture()})),this._cardElement.querySelector(e).addEventListener("click",(function(){return t._likeCard()})),this._cardElement.querySelector(".element__delete").addEventListener("click",(function(){return t._deleteCard()}))}},{key:"_openViewPicture",value:function(){this.handleOpenBigImage(this._link,this._name)}},{key:"_likeCard",value:function(){this._cardElement.querySelector(e).classList.toggle("element__like-button_active")}},{key:"_deleteCard",value:function(){this._cardElement.remove(),this._cardElement=null}}])&&T(r.prototype,n),Object.defineProperty(r,"prototype",{writable:!1}),t}();function D(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var N=function(){function e(t,r){var n,o,i=this,u=t.formSelector,c=t.inputSelector,a=t.submitButtonSelector,l=t.inactiveButtonClass,s=t.inputErrorClass,p=t.errorClass;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),o=function(){return i._inputList.some((function(e){return!e.validity.valid}))},(n="_hasInvalidInput")in this?Object.defineProperty(this,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):this[n]=o,this._formSelector=u,this._inputSelector=c,this._submitButtonSelector=a,this._inactiveButtonClass=l,this._inputErrorClass=s,this._errorClass=p,this._formEl=r,this._inputList=Array.from(this._formEl.querySelectorAll(this._inputSelector)),this._buttonElement=this._formEl.querySelector(this._submitButtonSelector)}var t,r;return t=e,(r=[{key:"_showInputError",value:function(e,t){var r=this._formEl.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),r.classList.add(this._errorClass),r.textContent=t}},{key:"_hideInputError",value:function(e){var t=this._formEl.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_disableButtonState",value:function(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.setAttribute("disabled","disabled")}},{key:"_enableButtonState",value:function(){this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.removeAttribute("disabled")}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this._disableButtonState():this._enableButtonState()}},{key:"resetForm",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t)}))}},{key:"_setEventListeners",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._formEl.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners(this._formEl)}}])&&D(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function F(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var J=function(){function e(t,r){var n=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderedItems=n,this._renderer=o,this._container=document.querySelector(r)}var t,r;return t=e,(r=[{key:"renderItems",value:function(){var e=this;this._renderedItems.forEach((function(t){return e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&F(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function M(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var z=new(function(){function e(t){var r=t.userNameSelector,n=t.userJobSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userNameSelector=document.querySelector(r),this._userJobSelector=document.querySelector(n)}var t,r;return t=e,(r=[{key:"getUserInfo",value:function(){return{name:this._userNameSelector.textContent,job:this._userJobSelector.textContent}}},{key:"setUserInfo",value:function(e){this._userNameSelector.textContent=e.name,this._userJobSelector.textContent=e.job}}])&&M(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}())({userNameSelector:n,userJobSelector:o}),G=new V(t,(function(e){z.setUserInfo(e),G.closePopup()}));G.setEventListeners();var H=new N(s,p);H.enableValidation(),f.addEventListener("click",(function(){var e=z.getUserInfo(),t=e.name,r=e.job;_.value=t,y.value=r,H.resetForm(),G.openPopup()}));var K=new L(c);function Q(e){return new A(e,".template",K.openPopup).generateCard()}K.setEventListeners();var W=new J({items:h,renderer:function(e){var t=Q(e);W.addItem(t)}},".elements__container");W.renderItems();var X=new V(i,(function(e){var t=Q(e);W.addItem(t),X.closePopup()}));X.setEventListeners();var Y=new N(s,d);Y.enableValidation(),b.addEventListener("click",(function(){X.openPopup(),Y.resetForm()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFDeUksR0FDaEUsSUFBTUosRUFBY0gsRUFBV08sR0FDL0JMLEVBQVVFLFFBQVFELEdBQ2xCRyxFQUFrQmpILFlBQ25CLElBQ0RpSCxFQUFrQmIsb0JBR2xCLElBQU1lLEVBQXFCLElBQUk5RCxFQUFjM0UsRUFBa0JZLEdBQy9ENkgsRUFBbUJiLG1CQUduQi9HLEVBQVVtQixpQkFBaUIsU0FBUyxXQUNsQ3VHLEVBQWtCUixZQUNsQlUsRUFBbUJYLFdBQ3BCLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXN0by93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9tZXN0by93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL21lc3RvL3dlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjazovL21lc3RvL3dlYnBhY2svcnVudGltZS9qc29ucCBjaHVuayBsb2FkaW5nIiwid2VicGFjazovL21lc3RvLy4vc3JjL3V0aWxzL2NvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL3BhZ2VzL2luZGV4LmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHQvLyBubyBtb2R1bGUuaWQgbmVlZGVkXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbi8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBfX3dlYnBhY2tfbW9kdWxlc19fO1xuXG4iLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmIgPSBkb2N1bWVudC5iYXNlVVJJIHx8IHNlbGYubG9jYXRpb24uaHJlZjtcblxuLy8gb2JqZWN0IHRvIHN0b3JlIGxvYWRlZCBhbmQgbG9hZGluZyBjaHVua3Ncbi8vIHVuZGVmaW5lZCA9IGNodW5rIG5vdCBsb2FkZWQsIG51bGwgPSBjaHVuayBwcmVsb2FkZWQvcHJlZmV0Y2hlZFxuLy8gW3Jlc29sdmUsIHJlamVjdCwgUHJvbWlzZV0gPSBjaHVuayBsb2FkaW5nLCAwID0gY2h1bmsgbG9hZGVkXG52YXIgaW5zdGFsbGVkQ2h1bmtzID0ge1xuXHQxNzk6IDBcbn07XG5cbi8vIG5vIGNodW5rIG9uIGRlbWFuZCBsb2FkaW5nXG5cbi8vIG5vIHByZWZldGNoaW5nXG5cbi8vIG5vIHByZWxvYWRlZFxuXG4vLyBubyBITVJcblxuLy8gbm8gSE1SIG1hbmlmZXN0XG5cbi8vIG5vIG9uIGNodW5rcyBsb2FkZWRcblxuLy8gbm8ganNvbnAgZnVuY3Rpb24iLCIvLyDQutC+0L3RgdGC0LDQvdGC0LAg0YEg0YHQtdC70LXQutGC0L7RgNCw0LzQuCDRjdC70LXQvNC10L3RgtC+0LIg0LLQvdGD0YLRgNC4INGC0LXQvNC/0LvQtdC50YLQsCDQutCw0YDRgtC+0YfQutC4XG5leHBvcnQgY29uc3QgY2FyZFRlbXBsYXRlU2VsZWN0b3JzID0ge1xuICBjYXJkRWxlbWVudDogJy5lbGVtZW50JyxcbiAgZWxlbWVudHNJbWFnZTogJy5lbGVtZW50X19waWN0dXJlJyxcbiAgZWxlbWVudHNOYW1lOiAnLmVsZW1lbnRfX3RpdGxlJyxcbiAgYnV0dG9uTGlrZTogJy5lbGVtZW50X19saWtlLWJ1dHRvbicsXG4gIGJ1dHRvbkRlbDogJy5lbGVtZW50X19kZWxldGUnLFxuICBsaWtlZDogJ2VsZW1lbnRfX2xpa2UtYnV0dG9uX2FjdGl2ZScsXG59XG5cbi8vINC60L7QvdGB0YLQsNC90YLQsCDRgSDRgdC10LvQtdC60YLQvtGA0LDQvNC4XG5leHBvcnQgY29uc3Qgc2VsZWN0b3JzID0ge1xuICBjYXJkVGVtcGxhdGU6ICcudGVtcGxhdGUnLFxuICBwbGFjZUZvckNhcmQ6ICcuZWxlbWVudHNfX2NvbnRhaW5lcicsXG4gIGVkaXRQcm9maWxlQnV0dG9uOiAnLnByb2ZpbGVfX2VkaXQtYnV0dG9uJyxcbiAgcG9wdXBQcm9maWxlOiAnLnBvcHVwX3R5cGVfcHJvZmlsZScsXG4gIGZvcm1Qcm9maWxlOiAnLnBvcHVwX19mb3JtX3R5cGVfcHJvZmlsZScsXG4gIHByb2ZpbGVOYW1lOiAnLnByb2ZpbGVfX25hbWUnLFxuICBwcm9maWxlSm9iOiAnLnByb2ZpbGVfX2pvYicsXG4gIG5hbWVJbnB1dDogJy5wb3B1cF9faW5wdXRfZGF0YV9uYW1lJyxcbiAgam9iSW5wdXQ6ICcucG9wdXBfX2lucHV0X2RhdGFfam9iJyxcbiAgYWRkQ2FyZEJ1dHRvbjogJy5wcm9maWxlX19hZGQtYnV0dG9uJyxcbiAgcG9wdXBDYXJkOiAnLnBvcHVwX3R5cGVfYWRkLWNhcmQnLFxuICBmb3JtQ2FyZDogJy5wb3B1cF9fZm9ybV90eXBlX2FkZC1jYXJkJyxcbiAgbmFtZUNhcmQ6ICcucG9wdXBfX2lucHV0X2RhdGFfcGxhY2UtbmFtZScsXG4gIGxpbmtDYXJkOiAnLnBvcHVwX19pbnB1dF9kYXRhX3BsYWNlLXVybCcsXG4gIHBvcHVwOiAnLnBvcHVwJyxcbiAgcG9wdXBPcGVuZWQ6ICdwb3B1cF9vcGVuZWQnLFxuICBjbG9zZWRCdXR0b246ICdwb3B1cF9fY2xvc2VkLWJ1dHRvbicsXG4gIGZvcm1TZWxlY3RvcjogJy5wb3B1cF9fZm9ybScsXG4gIGlucHV0U2VsZWN0b3I6ICcucG9wdXBfX2lucHV0JyxcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6ICcucG9wdXBfX2J1dHRvbicsXG4gIGluYWN0aXZlQnV0dG9uQ2xhc3M6ICdwb3B1cF9fYnV0dG9uX2Rpc2FibGVkJyxcbiAgaW5wdXRFcnJvckNsYXNzOiAncG9wdXBfX2lucHV0X3R5cGVfZXJyb3InLFxuICBlcnJvckNsYXNzOiAncG9wdXBfX2Vycm9yX3Zpc2libGUnLFxuICBwb3B1cFZpZXdQaWN0dXJlOiAnLnBvcHVwX3R5cGVfdmlldy1waWN0dXJlJyxcbiAgcG9wdXBQaWN0dXJlOiAnLnBvcHVwX19waWN0dXJlJyxcbiAgcG9wdXBUaXRsZTogJy5wb3B1cF9fcGljdHVyZS10aXRsZSdcbn1cblxuLy8g0YHQvtC90YHRgtCw0L3RgtCwINGBINGB0LXQu9C10LrRgtC+0YDQsNC80Lgg0LTQu9GPINCy0LDQu9C40LTQuNC30LDRhtC40Lgg0YTQvtGA0LxcbmV4cG9ydCBjb25zdCB2YWxpZGF0aW9uQ29uZmlnID0ge1xuICBmb3JtU2VsZWN0b3I6ICcucG9wdXBfX2Zvcm0nLFxuICBpbnB1dFNlbGVjdG9yOiAnLnBvcHVwX19pbnB1dCcsXG4gIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiAnLnBvcHVwX19idXR0b24nLFxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiAncG9wdXBfX2J1dHRvbl9kaXNhYmxlZCcsXG4gIGlucHV0RXJyb3JDbGFzczogJ3BvcHVwX19pbnB1dF90eXBlX2Vycm9yJyxcbiAgZXJyb3JDbGFzczogJ3BvcHVwX19lcnJvcl92aXNpYmxlJ1xufTtcblxuLy8g0LrQvtC90YHRgtCw0L3RgtGLINC/0L7Qv9Cw0L/QsCDRgNC10LTQsNC60YLQuNGA0L7QstCw0L3QuNGPINC/0YDQvtGE0LjQu9GPXG5leHBvcnQgY29uc3QgcHJvZmlsZUZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9ycy5mb3JtUHJvZmlsZSk7IC8vINGE0L7RgNC80LAg0YDQtdC00LDQutGC0LjRgNC+0LLQsNC90LjRjyDQv9GA0L7RhNC40LvRj1xuZXhwb3J0IGNvbnN0IGJ1dHRvbkVkaXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9ycy5lZGl0UHJvZmlsZUJ1dHRvbik7IC8vINC60L3QvtC/0LrQsCDRgNC10LTQsNC60YLQuNGA0L7QstCw0L3QuNGPINC/0YDQvtGE0LjQu9GPXG5leHBvcnQgY29uc3QgcG9wdXBQcm9maWxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3RvcnMucG9wdXBQcm9maWxlKTsgLy8g0L/QvtC/0LDQvyDRgNC10LTQsNC60YLQuNGA0L7QstCw0L3QuNGPINC/0YDQvtGE0LjQu9GPXG5leHBvcnQgY29uc3QgcHJvZmlsZUJ1dHRvbkVsZW1lbnQgPSBwb3B1cFByb2ZpbGUucXVlcnlTZWxlY3RvcihzZWxlY3RvcnMuc3VibWl0QnV0dG9uU2VsZWN0b3IpOyAvLyDQutC90L7Qv9C60LAg0L7RgtC/0YDQsNCy0LrQuCDQv9GA0L7RhNC40LvRj1xuZXhwb3J0IGNvbnN0IG5hbWVJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3JzLm5hbWVJbnB1dCk7IC8vINC/0L7Qu9C1INCy0LLQvtC00LAg0LjQvNC10L3QuCDQv9GA0L7RhNC40LvRj1xuZXhwb3J0IGNvbnN0IGpvYklucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3RvcnMuam9iSW5wdXQpOyAvLyDQv9C+0LvQtSDQstCy0L7QtNCwINGA0L7QtNCwINC30LDQvdC40Y/RgtC40Lkg0L/RgNC+0YTQuNC70Y9cbmV4cG9ydCBjb25zdCBwcm9maWxlTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3JzLnByb2ZpbGVOYW1lKTsgLy8gZG9tINGN0LvQtdC80LXQvdGCINC/0L7QutCw0LfRi9Cy0LDRjtGJ0LjQuSDQuNC80Y8g0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GPXG5leHBvcnQgY29uc3QgcHJvZmlsZUpvYiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3JzLnByb2ZpbGVKb2IpOyAvLyBkb20g0Y3Qu9C10LzQtdC90YIg0L/QvtC60LDQt9GL0LLQsNGO0YnQuNC5INGA0L7QtCDQt9Cw0L3Rj9GC0LjQuSDQv9C+0LvRjNC30L7QstCw0YLQtdC70Y9cblxuLy8g0LrQvtC90YHRgtCw0L3RgtGLINC/0L7Qv9Cw0L/QsCDQtNC+0LHQsNCy0LvQtdC90LjRjyDQutCw0YDRgtC+0YfQutC4XG5leHBvcnQgY29uc3QgY2FyZEZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9ycy5mb3JtQ2FyZCk7IC8vINGE0L7RgNC80LAg0YDQtdC00LDQutGC0LjRgNC+0LLQsNC90LjRjyDQutCw0YDRgtC+0YfQutC4XG5leHBvcnQgY29uc3QgYnV0dG9uQWRkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3RvcnMuYWRkQ2FyZEJ1dHRvbik7IC8vINC60L3QvtC/0LrQsCDQtNC+0LHQsNCy0LvQtdC90LjRjyDQutCw0YDRgtC+0YfQutC4XG5leHBvcnQgY29uc3QgcG9wdXBDYXJkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3RvcnMucG9wdXBDYXJkKTsgLy8g0L/QvtC/0LDQvyDQtNC+0LHQsNCy0LvQtdC90LjRjyDQutCw0YDRgtC+0YfQutC4XG5leHBvcnQgY29uc3QgbmFtZUNhcmQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9ycy5uYW1lQ2FyZCk7IC8vINC/0L7Qu9C1INCy0LLQvtC00LAg0L3QsNC30LLQsNC90LjRjyDQvNC10YHRgtCwINC60LDRgNGC0L7Rh9C60LhcbmV4cG9ydCBjb25zdCBsaW5rQ2FyZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3JzLmxpbmtDYXJkKTsgLy8g0L/QvtC70LUg0LLQstC+0LTQsCDRgdGB0YvQu9C60Lgg0L3QsCDQutCw0YDRgtC40L3QutGDINC60LDRgNGC0L7Rh9C60LhcblxuLy8g0LrQvtC90YHRgtCw0L3RgtGLINC/0L7Qv9Cw0L/QsCDRgSDRg9Cy0LXQu9C40YfQtdC90L3QvtC5INC60LDRgNGC0LjQvdC60L7QuSDQutCw0YDRgtC+0YfQutC4XG5leHBvcnQgY29uc3QgcG9wdXBWaWV3UGljdHVyZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3JzLnBvcHVwVmlld1BpY3R1cmUpOyAvLyDQv9C+0L/QsNC/INGD0LLQtdC70LjRh9C10L3QvdC+0Lkg0LrQsNGA0YLQuNC90LrQuFxuZXhwb3J0IGNvbnN0IHBvcHVwSW1nUGljdHVyZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3JzLnBvcHVwUGljdHVyZSk7IC8vINGD0LLQtdC70LjRh9C10L3QvdCw0Y8g0LrQsNGA0YLQuNC90LrQsFxuZXhwb3J0IGNvbnN0IGNhcHRpb25PZlBvcHVwSW1nID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3RvcnMucG9wdXBUaXRsZSk7IC8vINC/0L7QtNC/0LjRgdGMINGD0LLQtdC70LjRh9C10L3QvdC+0Lkg0LrQsNGA0YLQuNC90LrQuFxuXG4vLyDQutC+0L3RgdGC0LDQvdGC0Ysg0LTQu9GPINC60L7RgNGA0LXQutGC0L3QvtC5INGA0LDQsdC+0YLRiyDQuNC80L/QvtGA0YLQsCDQutCw0YDRgtC40L3QvtC6INGH0LXRgNC10Lcgd2VicGFja1xuY29uc3QgYmFsaUltYWdlID0gbmV3IFVSTCgnLi4vaW1hZ2VzL2VsZW1lbnRzL0JhbGktSW5kb25lc2lhLmpwZycsIGltcG9ydC5tZXRhLnVybCk7XG5jb25zdCBjYWxpZm9ybmlhSW1hZ2UgPSBuZXcgVVJMKCcuLi9pbWFnZXMvZWxlbWVudHMvWW9zZW1pdGUtVVNBLmpwZycsIGltcG9ydC5tZXRhLnVybCk7XG5jb25zdCBqb3JkYW5JbWFnZSA9IG5ldyBVUkwoJy4uL2ltYWdlcy9lbGVtZW50cy9QZXRyYS1Kb3JkYW4uanBnJywgaW1wb3J0Lm1ldGEudXJsKTtcbmNvbnN0IHJvbWVJbWFnZSA9IG5ldyBVUkwoJy4uL2ltYWdlcy9lbGVtZW50cy9Sb21lLUl0YWxpLmpwZycsIGltcG9ydC5tZXRhLnVybCk7XG5jb25zdCBwYXJpc0ltYWdlID0gbmV3IFVSTCgnLi4vaW1hZ2VzL2VsZW1lbnRzL1BhcmlzLUZyYW5jZS5qcGcnLCBpbXBvcnQubWV0YS51cmwpO1xuY29uc3QgcGV0ZXJzYnVyZ0ltYWdlID0gbmV3IFVSTCgnLi4vaW1hZ2VzL2VsZW1lbnRzL1NhaW50LVBldGVyc2J1cmctUnVzc2lhLmpwZycsIGltcG9ydC5tZXRhLnVybCk7XG4vLyDQvNCw0YHRgdC40LIg0YHRgtCw0YDRgtC+0LLRi9GFINC60LDRgNGC0L7Rh9C10LpcbmV4cG9ydCBjb25zdCBpbml0aWFsQ2FyZHMgPSBbXG4gIHtcbiAgICBwbGFjZTogJ9CR0LDQu9C4JyxcbiAgICBwaWN0dXJlVXJsOiBiYWxpSW1hZ2VcbiAgfSxcbiAge1xuICAgIHBsYWNlOiAn0JrQsNC70LjRhNC+0YDQvdC40Y8nLFxuICAgIHBpY3R1cmVVcmw6IGNhbGlmb3JuaWFJbWFnZVxuICB9LFxuICB7XG4gICAgcGxhY2U6ICfQmNC+0YDQtNCw0L3QuNGPJyxcbiAgICBwaWN0dXJlVXJsOiBqb3JkYW5JbWFnZVxuICB9LFxuICB7XG4gICAgcGxhY2U6ICfQoNC40LwnLFxuICAgIHBpY3R1cmVVcmw6IHJvbWVJbWFnZVxuICB9LFxuICB7XG4gICAgcGxhY2U6ICfQn9Cw0YDQuNC2JyxcbiAgICBwaWN0dXJlVXJsOiBwYXJpc0ltYWdlXG4gIH0sXG4gIHtcbiAgICBwbGFjZTogJ9Ch0LDQvdC60YIt0J/QtdGC0LXRgNCx0YPRgNCzJyxcbiAgICBwaWN0dXJlVXJsOiBwZXRlcnNidXJnSW1hZ2VcbiAgfSxcbl0iLCIvLyDQuNC80L/QvtGA0YIg0YHQtdC70LXQutGC0L7RgNC+0LJcbmltcG9ydCB7IHNlbGVjdG9ycyB9IGZyb20gJy4uL3V0aWxzL2NvbnN0YW50cy5qcyc7XG5cbi8vINC60LvQsNGB0YEg0L/QvtC/0LDQv9CwINC+0YLQstC10YfQsNC10YIg0LfQsCDQvtGC0LrRgNGL0YLQuNC1INC4INC30LDQutGA0YvRgtC40LUg0L/QvtC/0LDQv9CwXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cCB7XG4gIC8vINC60L7QvdGB0YLRgNGD0LrRgtC+0YAg0L/QvtC/0LDQv9CwXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcbiAgICB0aGlzLl9wb3B1cFNlbGVjdG9yID0gcG9wdXBTZWxlY3RvcjtcbiAgICB0aGlzLl9wb3B1cCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBTZWxlY3Rvcik7XG4gIH1cblxuICAvLyDQvNC10YLQvtC0INC+0YLQutGA0YvQstCw0Y7RidC40Lkg0L/QvtC/0LDQv1xuICBvcGVuUG9wdXAoKSB7XG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LmFkZChzZWxlY3RvcnMucG9wdXBPcGVuZWQpO1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9jbG9zZVBvcHVwT25Fc2MpO1xuICB9XG5cbiAgLy8g0LzQtdGC0L7QtCDQt9Cw0LrRgNGL0LLQsNGO0YnQuNC5INC/0L7Qv9Cw0L9cbiAgY2xvc2VQb3B1cCgpIHtcbiAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QucmVtb3ZlKHNlbGVjdG9ycy5wb3B1cE9wZW5lZCk7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX2Nsb3NlUG9wdXBPbkVzYyk7XG4gIH1cblxuICAvLyDQvNC10YLQvtC0INC30LDQutGA0YvQstCw0Y7RidC40Lkg0L/QvtC/0LDQvyDQvdCw0LbQsNGC0LjQtdC8INC90LAgZXNjYXBlXG4gIF9jbG9zZVBvcHVwT25Fc2MgPSAoZXZ0KSA9PiB7XG4gICAgaWYgKGV2dC5rZXkgPT09ICdFc2NhcGUnKSB7XG4gICAgICB0aGlzLmNsb3NlUG9wdXAoKTtcbiAgICB9XG4gIH1cblxuICAvLyDQvNC10YLQvtC0INC30LDQutGA0YvQstCw0Y7RidC40Lkg0L/QvtC/0LDQvyDQv9C+INC60LvQuNC60YMg0LzRi9GI0LrQvtC5XG4gIF9jbG9zZVBvcHVwQnlDbGljayA9IChldnQpID0+IHtcbiAgICBjb25zdCB0YXJnZXQgPSBldnQudGFyZ2V0O1xuICAgIGNvbnN0IG1vZGFsID0gdGFyZ2V0LmNsb3Nlc3Qoc2VsZWN0b3JzLnBvcHVwKTtcbiAgICBpZiAodGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhzZWxlY3RvcnMuY2xvc2VkQnV0dG9uKSB8fCB0YXJnZXQgPT09IG1vZGFsKSB7XG4gICAgICB0aGlzLmNsb3NlUG9wdXAoKTtcbiAgICB9XG4gIH1cblxuICAvLyDRg9GB0YLQsNC90L7QstC60LAg0YHQu9GD0YjQsNGC0LXQu9GPINC30LDQutGA0YvRgtC40Y8g0L/QvtC/0LDQv9C+0LIg0L/QviDQutC70LjQutGDINC80YvRiNC60L7QuVxuICBzZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLl9wb3B1cC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX2Nsb3NlUG9wdXBCeUNsaWNrKTtcbiAgfVxufSIsIi8vINC40LzQv9C+0YDRgiDQutC70LDRgdGB0LAg0L/QvtC/0LDQv1xuaW1wb3J0IFBvcHVwIGZyb20gJy4uL2NvbXBvbmVudHMvUG9wdXAuanMnO1xuLy8g0LjQvNC/0L7RgNGCINGB0LXQu9C10LrRgtC+0YDQvtCyXG5pbXBvcnQgeyBzZWxlY3RvcnMgfSBmcm9tICcuLi91dGlscy9jb25zdGFudHMuanMnO1xuXG4vLyDQutC70LDRgdGBINC/0L7Qv9Cw0L/QsCDRgSDQutCw0YDRgtC40L3QutC+0Lkg0L7RgtC60YDRi9Cy0LDQtdGCINC60LDRgNGC0LjQvdC60YMg0LjQtyDQutCw0YDRgtC+0YfQutC4INC90LAg0LLQtdGB0Ywg0Y3QutGA0LDQvSDQuCDQvdCw0YHQu9C10LTRg9C10YIg0YfQsNGB0YLRjCDQvNC10YLQvtC00L7QsiDQvtGCINC60LvQsNGB0YHQsCDQv9C+0L/QsNC/XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xuICAgIHRoaXMuX3BvcHVwSW1nUGljdHVyZSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3JzLnBvcHVwUGljdHVyZSk7XG4gICAgdGhpcy5fdGl0bGVPZlBvcHVwSW1nID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihzZWxlY3RvcnMucG9wdXBUaXRsZSk7XG4gIH1cbiAgXG4gIC8vINC/0LXRgNC10LfQsNC/0LjRgdGMINGA0L7QtNC40YLQtdC70YzRgdC60L7Qs9C+INC80LXRgtC+0LTQsC4g0KLQtdC/0LXRgNGMINC+0L0g0L7RgtC60YDRi9Cy0LDQtdGCINC60LDRgNGC0LjQvdC60YMg0LjQtyDQutCw0YDRgtC+0YfQutC4INC90LAg0LLQtdGB0Ywg0Y3QutGA0LDQvSDRgSDQv9C+0LTQv9C40YHRjNGOXG4gIG9wZW5Qb3B1cCA9IChwaWN0dXJlVXJsLCBwbGFjZSkgPT4ge1xuICAgIHRoaXMuX3BvcHVwSW1nUGljdHVyZS5zcmMgPSBwaWN0dXJlVXJsO1xuICAgIHRoaXMuX3BvcHVwSW1nUGljdHVyZS5hbHQgPSBwbGFjZTtcbiAgICB0aGlzLl90aXRsZU9mUG9wdXBJbWcudGV4dENvbnRlbnQgPSBwbGFjZTtcbiAgICBzdXBlci5vcGVuUG9wdXAoKTtcbiAgfVxufSIsIi8vINC40LzQv9C+0YDRgiDQutC70LDRgdGB0LAg0L/QvtC/0LDQv1xuaW1wb3J0IFBvcHVwIGZyb20gJy4uL2NvbXBvbmVudHMvUG9wdXAuanMnO1xuLy8g0LjQvNC/0L7RgNGCINGB0LXQu9C10LrRgtC+0YDQvtCyXG5pbXBvcnQgeyBzZWxlY3RvcnMgfSBmcm9tICcuLi91dGlscy9jb25zdGFudHMuanMnO1xuXG4vLyDQutC70LDRgdGBINC/0L7Qv9Cw0L/QsCDRgSDRhNC+0YDQvNC+0LkgLSDQtNC+0LHQsNCy0LvRj9C10YIg0LrQu9Cw0YHRgdGDINC/0L7Qv9Cw0L8g0LzQtdGC0L7QtNGLINC/0L4g0YHQsdC+0YDRgyDQtNCw0L3QvdGL0YUg0LjQtyDQv9C+0LvQtdC5INC40LzQv9GD0YLQsCDQuCDQuNGFINC+0LHRgNCw0LHQvtGC0LrQtSDQuCDQvdCw0YHQu9C10LTRg9C10YIg0YfQsNGB0YLRjCDQvNC10YLQvtC00L7QsiDQvtGCINC60LvQsNGB0YHQsCDQv9C+0L/QsNC/INC4INGN0LrRgdC/0L7RgNGCINC10LPQviDRgdC+0LTQtdGA0LbQuNC80L7Qs9C+XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xuICAvLyDQutC+0L3RgdGC0YDRg9C60YLQvtGAINC60LvQsNGB0YHQsCDQv9C+0L/QsNC/INGBINGE0L7RgNC80L7QuVxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCBoYW5kbGVTdWJtaXRGb3JtKSB7XG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5faGFuZGxlU3VibWl0Rm9ybSA9IGhhbmRsZVN1Ym1pdEZvcm07XG4gICAgdGhpcy5fZm9ybSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3JzLmZvcm1TZWxlY3Rvcik7XG4gICAgdGhpcy5faW5wdXRMaXN0ID0gQXJyYXkuZnJvbSh0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9ycy5pbnB1dFNlbGVjdG9yKSk7XG4gIH1cblxuICAvLyDQvNC10YLQvtC0INC30LDQutGA0YvRgtC40Y8g0L/QvtC/0LDQv9CwINGBINGE0L7QvNC+0Lkg0L3QsNGB0LvQtdC00YPRjtC80YvQuSDQvtGCINC/0L7Qv9Cw0L/QsCDQuCDQvtGH0LjRidCw0Y7RidC40Lkg0L/QvtC70Y8g0YTQvtGA0LzRi1xuICBjbG9zZVBvcHVwKCkge1xuICAgIHN1cGVyLmNsb3NlUG9wdXAoKTtcbiAgICB0aGlzLl9mb3JtLnJlc2V0KCk7XG4gIH1cblxuICAvLyDQvNC10YLQvtC0INGB0L7QsdC40YDQsNGO0YnQuNC5INC30L3QsNGH0LXQvdC40Y8g0LjQtyDQstGB0LXRhSDQv9C+0LvQtdC5INCy0LLQvtC00LBcbiAgX2dldElucHV0VmFsdWVzKCkge1xuICAgIHRoaXMuX2Zvcm1WYWx1ZXMgPSB7fTtcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XG4gICAgICB0aGlzLl9mb3JtVmFsdWVzW2lucHV0RWxlbWVudC5uYW1lXSA9IGlucHV0RWxlbWVudC52YWx1ZTtcbiAgICB9KTtcbiAgICByZXR1cm4gdGhpcy5fZm9ybVZhbHVlcztcbiAgfTtcblxuICAvLyDQvNC10YLQvtC0INGD0YHRgtCw0L3QsNCy0LvQuNCy0LDRjtGJ0LjQuSDQvtCx0YDQsNCx0L7RgtGH0LjQutC4INGB0L7QsdGL0YLQuNC5INC90LAg0L/QvtC/0LDQvyDQvdCw0YHQu9C10LTRg9C10LzRi9C5INC+0YIg0LrQu9Cw0YHRgdCwINC/0L7Qv9Cw0L9cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChldnQpID0+IHtcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgdGhpcy5faGFuZGxlU3VibWl0Rm9ybSh0aGlzLl9nZXRJbnB1dFZhbHVlcygpKTtcbiAgICB9KTtcbiAgfVxufSIsIi8vINC40LzQv9C+0YDRgiDQutC+0L3RgdGC0LDQvdGCINGBINGB0LXQu9C10LrRgtC+0YDQsNC80Lgg0Y3Qu9C10LzQtdC90YLQvtCyINCy0L3Rg9GC0YDQuCDRgtC10LzQv9C70LXQudGC0LAg0LrQsNGA0YLQvtGH0LrQuFxuaW1wb3J0IHsgY2FyZFRlbXBsYXRlU2VsZWN0b3JzIH0gZnJvbSAnLi4vdXRpbHMvY29uc3RhbnRzLmpzJztcblxuLy8g0LrQu9Cw0YHRgSDQutCw0YDRgtC+0YfQutC4IC0g0YHQvtC30LTQsNGR0YIg0LrQsNGA0YLQvtGH0LrRgyDRgSDRgtC10LrRgdGC0L7QvCDQuCDRgdGB0YvQu9C60L7QuSDQvdCwINC40LfQvtCx0YDQsNC20LXQvdC40LVcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENhcmQge1xuICAvLyDQutC+0L3RgdGC0YDRg9C60YLQvtGAINC60LDRgNGC0L7Rh9C60LhcbiAgY29uc3RydWN0b3IoeyBwbGFjZSwgcGljdHVyZVVybCB9LCB0ZW1wbGF0ZVNlbGVjdG9yLCBoYW5kbGVPcGVuQmlnSW1hZ2UpIHtcbiAgICB0aGlzLl9uYW1lID0gcGxhY2U7XG4gICAgdGhpcy5fbGluayA9IHBpY3R1cmVVcmw7XG4gICAgdGhpcy5fdGVtcGxhdGVTZWxlY3RvciA9IHRlbXBsYXRlU2VsZWN0b3I7XG4gICAgdGhpcy5oYW5kbGVPcGVuQmlnSW1hZ2UgPSBoYW5kbGVPcGVuQmlnSW1hZ2U7XG4gIH1cblxuICAvLyDQvNC10YLQvtC0INC00LvRjyDQv9C+0LjRgdC60LAg0Lgg0LrQu9C+0L3QuNGA0L7QstCw0L3QuNGPINGA0LDQt9C80LXRgtC60Lgg0LrQsNGA0YLQvtGH0LrQuFxuICBfZ2V0Q2FyZEVsZW1lbnQoKSB7XG4gICAgY29uc3QgY2FyZEVsZW1lbnQgPSBkb2N1bWVudFxuICAgICAgLnF1ZXJ5U2VsZWN0b3IodGhpcy5fdGVtcGxhdGVTZWxlY3RvcilcbiAgICAgIC5jb250ZW50XG4gICAgICAucXVlcnlTZWxlY3RvcihjYXJkVGVtcGxhdGVTZWxlY3RvcnMuY2FyZEVsZW1lbnQpXG4gICAgICAuY2xvbmVOb2RlKHRydWUpO1xuXG4gICAgcmV0dXJuIGNhcmRFbGVtZW50O1xuICB9XG5cbiAgLy8g0LzQtdGC0L7QtCDQtNC70Y8g0L3QsNC/0L7Qu9C90LXQvdC40Y8g0LrQsNGA0YLQvtGH0LrQuCDQvdGD0LbQvdGL0Lwg0LrQvtC90YLQtdC90YLQvtC8XG4gIGdlbmVyYXRlQ2FyZCgpIHtcbiAgICB0aGlzLl9jYXJkRWxlbWVudCA9IHRoaXMuX2dldENhcmRFbGVtZW50KCk7XG4gICAgdGhpcy5jYXJkUGljdHVyZSA9IHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoY2FyZFRlbXBsYXRlU2VsZWN0b3JzLmVsZW1lbnRzSW1hZ2UpO1xuICAgIHRoaXMuY2FyZFBpY3R1cmUuc3JjID0gdGhpcy5fbGluaztcbiAgICB0aGlzLmNhcmRQaWN0dXJlLmFsdCA9IHRoaXMuX25hbWU7XG4gICAgdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihjYXJkVGVtcGxhdGVTZWxlY3RvcnMuZWxlbWVudHNOYW1lKS50ZXh0Q29udGVudCA9IHRoaXMuX25hbWU7XG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICByZXR1cm4gdGhpcy5fY2FyZEVsZW1lbnQ7XG4gIH1cblxuICAvLyDQvNC10YLQvtC0INC00LvRjyDRg9GB0YLQsNC90L7QstC60Lgg0YHQu9GD0YjQsNGC0LXQu9C10Lkg0LLQvdGD0YLRgNC4INC60LDRgNGC0L7Rh9C60LhcbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuY2FyZFBpY3R1cmUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLl9vcGVuVmlld1BpY3R1cmUoKSk7XG4gICAgdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihjYXJkVGVtcGxhdGVTZWxlY3RvcnMuYnV0dG9uTGlrZSkuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLl9saWtlQ2FyZCgpKTtcbiAgICB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKGNhcmRUZW1wbGF0ZVNlbGVjdG9ycy5idXR0b25EZWwpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5fZGVsZXRlQ2FyZCgpKTtcbiAgfVxuXG4gIC8vINC80LXRgtC+0LQg0LTQu9GPINC+0YLQutGA0YvRgtC40Y8g0YPQstC10LvQuNGH0LXQvdC90L7QuSDQutCw0YDRgtC+0YfQutC4XG4gIF9vcGVuVmlld1BpY3R1cmUoKSB7XG4gICAgdGhpcy5oYW5kbGVPcGVuQmlnSW1hZ2UodGhpcy5fbGluaywgdGhpcy5fbmFtZSk7XG4gIH1cblxuICAvLyDQvNC10YLQvtC0INC00LvRjyDQu9Cw0LnQutCwINC60LDRgNGC0L7Rh9C60LhcbiAgX2xpa2VDYXJkKCkge1xuICAgIHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoY2FyZFRlbXBsYXRlU2VsZWN0b3JzLmJ1dHRvbkxpa2UpLmNsYXNzTGlzdC50b2dnbGUoY2FyZFRlbXBsYXRlU2VsZWN0b3JzLmxpa2VkKTtcbiAgfVxuXG4gIC8vINC80LXRgtC+0LQg0LTQu9GPINGD0LTQsNC70LXQvdC40Y8g0LrQsNGA0YLQvtGH0LrQuFxuICBfZGVsZXRlQ2FyZCgpIHtcbiAgICB0aGlzLl9jYXJkRWxlbWVudC5yZW1vdmUoKTtcbiAgICB0aGlzLl9jYXJkRWxlbWVudCA9IG51bGw7XG4gIH1cbn0iLCIvLyDQutC70LDRgdGBINCy0LDQu9C40LTQsNGG0LjQuCDRhNC+0YDQvNGLIC0g0L3QsNGB0YLRgNCw0LjQstCw0LXRgiDQstCw0LvQuNC00LDRhtC40Y4g0L/QvtC70LXQuSDRhNC+0YDQvNGLXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBGb3JtVmFsaWRhdG9yIHtcbiAgLy8g0LrQvtC90YHRgtGA0YPQutGC0L7RgCDQstCw0LvQuNC00LDRgtC+0YDQsFxuICBjb25zdHJ1Y3Rvcih7XG4gICAgZm9ybVNlbGVjdG9yLFxuICAgIGlucHV0U2VsZWN0b3IsXG4gICAgc3VibWl0QnV0dG9uU2VsZWN0b3IsXG4gICAgaW5hY3RpdmVCdXR0b25DbGFzcyxcbiAgICBpbnB1dEVycm9yQ2xhc3MsXG4gICAgZXJyb3JDbGFzc1xuICB9LCBmb3JtRWwpIHtcbiAgICB0aGlzLl9mb3JtU2VsZWN0b3IgPSBmb3JtU2VsZWN0b3I7XG4gICAgdGhpcy5faW5wdXRTZWxlY3RvciA9IGlucHV0U2VsZWN0b3I7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IgPSBzdWJtaXRCdXR0b25TZWxlY3RvcjtcbiAgICB0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzID0gaW5hY3RpdmVCdXR0b25DbGFzcztcbiAgICB0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPSBpbnB1dEVycm9yQ2xhc3M7XG4gICAgdGhpcy5fZXJyb3JDbGFzcyA9IGVycm9yQ2xhc3M7XG4gICAgdGhpcy5fZm9ybUVsID0gZm9ybUVsO1xuICAgIHRoaXMuX2lucHV0TGlzdCA9IEFycmF5LmZyb20odGhpcy5fZm9ybUVsLnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5faW5wdXRTZWxlY3RvcikpO1xuICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQgPSB0aGlzLl9mb3JtRWwucXVlcnlTZWxlY3Rvcih0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3Rvcik7XG4gIH1cblxuICAvLyDQvNC10YLQvtC0INC/0L7QutCw0LfRi9Cy0LDRjtGJ0LjQuSDRgdC+0L7QsdGJ0LXQvdC40LUg0L7QsSDQvtGI0LjQsdC60LUg0LIg0L/QvtC70LUg0LjQvNC/0YPRgtCwXG4gIF9zaG93SW5wdXRFcnJvcihpbnB1dEVsZW1lbnQsIGVycm9yTWVzc2FnZSkge1xuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm1FbC5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYCk7XG4gICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9lcnJvckNsYXNzKTtcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBlcnJvck1lc3NhZ2U7XG4gIH1cblxuICAvLyDQvNC10YLQvtC0INGB0LrRgNGL0LLQsNGO0YnQuNC5INGB0L7QvtCx0YnQtdC90LjQtSDQvtCxINC+0YjQuNCx0LrQtSDQsiDQv9C+0LvQtSDQuNC80L/Rg9GC0LBcbiAgX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCkge1xuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm1FbC5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYCk7XG4gICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9lcnJvckNsYXNzKTtcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSAnJztcbiAgfVxuXG4gIC8vINC80LXRgtC+0LQg0L/RgNC+0LLQtdGA0Y/RjtGJ0LjQuSDQvdGD0LbQvdC+INC70Lgg0L/QvtC60LDQt9GL0LLQsNGC0Ywg0LjQu9C4INGB0LrRgNGL0YLRjCDRgdC+0L7QsdGJ0LXQvdC40LUg0L7QsSDQvtGI0LjQsdC60LVcbiAgX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpIHtcbiAgICBpZiAoaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkKSB7XG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9zaG93SW5wdXRFcnJvcihpbnB1dEVsZW1lbnQsIGlucHV0RWxlbWVudC52YWxpZGF0aW9uTWVzc2FnZSk7XG4gICAgfVxuICB9XG5cbiAgLy8g0LzQtdGC0L7QtCDQv9GA0L7QstC10YDRj9GO0YnQuNC5INC10YHRgtGMINC70Lgg0L7RiNC40LHQutCwINGF0L7RgtGPINCx0Ysg0LIg0L7QtNC90L7QvCDQuNC3INC/0L7Qu9C10LlcbiAgX2hhc0ludmFsaWRJbnB1dCA9ICgpID0+IHtcbiAgICByZXR1cm4gdGhpcy5faW5wdXRMaXN0LnNvbWUoKGlucHV0RWxlbWVudCkgPT4gIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZCk7XG4gIH07XG5cbiAgLy8g0LzQtdGC0L7QtCDQvtGC0LrQu9GO0YfQsNGO0YnQuNC5INC60L3QvtC/0LrRgyDQvtGC0L/RgNCw0LLQutC4INGE0L7RgNC80YtcbiAgX2Rpc2FibGVCdXR0b25TdGF0ZSgpIHtcbiAgICB0aGlzLl9idXR0b25FbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XG4gICAgdGhpcy5fYnV0dG9uRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiLCBcImRpc2FibGVkXCIpO1xuICB9XG4gIC8vINC80LXRgtC+0LQg0LLQutC70Y7Rh9Cw0Y7RidC40Lkg0LrQvdC+0L/QutGDINC+0YLQv9GA0LDQstC60Lgg0YTQvtGA0LzRi1xuICBfZW5hYmxlQnV0dG9uU3RhdGUoKSB7XG4gICAgdGhpcy5fYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKFwiZGlzYWJsZWRcIik7XG4gIH1cblxuICAgLy8g0LzQtdGC0L7QtCDRg9C/0YDQsNCy0LvRj9GO0YnQuNC5INC/0L7QstC10LTQtdC90LjQtdC8INC60L3QvtC/0LrQuCDQvtGC0L/RgNCw0LLQutC4INGE0L7RgNC80YtcbiAgX3RvZ2dsZUJ1dHRvblN0YXRlKCkge1xuICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQoKSkge1xuICAgICAgdGhpcy5fZGlzYWJsZUJ1dHRvblN0YXRlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX2VuYWJsZUJ1dHRvblN0YXRlKCk7XG4gICAgfVxuICB9XG5cbiAgLy8g0LzQtdGC0L7QtCDQvtGH0LjRidCw0Y7RidC40Lkg0L/QvtC70Y8g0YTQvtGA0Lwg0L7RgiDRgdC+0L7QsdGJ0LXQvdC40Lkg0L7QsSDQvtGI0LjQsdC60LDRhSDQuCDQv9GA0L7QstC10YDRj9GO0YnQuNC5INGB0L7RgdGC0L7Rj9C90LjQtSDQutC90L7Qv9C60LhcbiAgcmVzZXRGb3JtKCkge1xuICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcbiAgICB9KTtcbiAgfVxuXG4gIC8vINC80LXRgtC+0LQg0LTQu9GPINGD0YHRgtCw0L3QvtCy0LrQuCDRgdC70YPRiNCw0YLQtdC70LXQuSDQsiDQv9C+0LvRj9GFINGE0L7RgNC80YtcbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgKCkgPT4ge1xuICAgICAgICB0aGlzLl9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbGVtZW50KTtcbiAgICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgLy8g0LzQtdGC0L7QtCDQt9Cw0L/Rg9GB0LrQsNGO0YnQuNC5INCy0LDQu9C40LTQsNGG0LjRjlxuICBlbmFibGVWYWxpZGF0aW9uKCkge1xuICAgIHRoaXMuX2Zvcm1FbC5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCBmdW5jdGlvbiAoZXZ0KSB7XG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICB9KTtcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycyh0aGlzLl9mb3JtRWwpO1xuICB9O1xufVxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4iLCIvLyDQutC70LDRgdGBINGB0LXQutGG0LjQuCAtINC+0YLQstC10YfQsNC10YIg0LfQsCDQvtGC0YDQuNGB0L7QstC60YMg0Y3Qu9C10LzQtdC90YLQvtCyINC90LAg0YHRgtGA0LDQvdC40YbQtS5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlY3Rpb24ge1xuICAvLyDQutC+0L3RgdGC0YDRg9C60YLQvtGAINGB0LXQutGG0LjQuFxuICBjb25zdHJ1Y3Rvcih7IGl0ZW1zICwgcmVuZGVyZXIgfSwgc2VsZWN0b3IpIHtcbiAgICB0aGlzLl9yZW5kZXJlZEl0ZW1zID0gaXRlbXM7XG4gICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcbiAgICB0aGlzLl9jb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKTtcbiAgfVxuXG4gIC8vINC80LXRgtC+0LQg0L7RgtGA0LjRgdC+0LLRi9Cy0LDRjtGJ0LjQuSDQutCw0YDRgtC+0YfQutC4XG4gIHJlbmRlckl0ZW1zKCkge1xuICAgIHRoaXMuX3JlbmRlcmVkSXRlbXMuZm9yRWFjaChpdGVtID0+IHRoaXMuX3JlbmRlcmVyKGl0ZW0pKVxuICB9XG5cbiAgLy8g0LzQtdGC0L7QtCDQv9GA0LjQvdC40LzQsNGO0YnQuNC5IERPTS3RjdC70LXQvNC10L3RgiDQuCDQtNC+0LHQsNCy0LvRj9GO0YnQuNC5INC10LPQviDQsiDRgtC+INC80LXRgdGC0L4g0YDQsNC30LzQtdGC0LrQuCwg0LrRg9C00LAg0LXQs9C+INC90YPQttC90L4g0LLRgdGC0LDQstC40YLRjFxuICBhZGRJdGVtKGVsZW1lbnQpIHtcbiAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChlbGVtZW50KTtcbiAgfVxufSIsIi8vINC40LzQv9C+0YDRgiDRhNCw0LnQu9CwINGB0L4g0YHRgtC40LvRj9C80LggQ1NTXG5pbXBvcnQgJy4vaW5kZXguY3NzJztcblxuLy8g0LjQvNC/0L7RgNGCINGB0LXQu9C10LrRgtC+0YDQvtCyINC4INC60L7QvdGB0YLQsNC90YJcbmltcG9ydCB7XG4gIHNlbGVjdG9ycyxcbiAgdmFsaWRhdGlvbkNvbmZpZyxcbiAgaW5pdGlhbENhcmRzLFxuICBwcm9maWxlRm9ybSxcbiAgY2FyZEZvcm0sXG4gIGJ1dHRvbkVkaXQsXG4gIGJ1dHRvbkFkZCxcbiAgbmFtZUlucHV0LFxuICBqb2JJbnB1dCxcbn0gZnJvbSAnLi4vdXRpbHMvY29uc3RhbnRzLmpzJztcblxuLy8g0LjQvNC/0L7RgNGCINC60LvQsNGB0YHQvtCyXG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSAnLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyc7XG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tICcuLi9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMnO1xuaW1wb3J0IENhcmQgZnJvbSAnLi4vY29tcG9uZW50cy9DYXJkLmpzJztcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gJy4uL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyc7XG5pbXBvcnQgU2VjdGlvbiBmcm9tICcuLi9jb21wb25lbnRzL1NlY3Rpb24uanMnO1xuaW1wb3J0IFVzZXJJbmZvIGZyb20gJy4uL2NvbXBvbmVudHMvVXNlckluZm8uanMnO1xuXG4vLyDRgdC+0LfQtNCw0LXQvCDQvtCx0LXQutGCINGBINC60LvQsNGB0YHQvtC8INGO0LfQtdGA0LjQvdGE0L5cbmNvbnN0IHVzZXIgPSBuZXcgVXNlckluZm8oe1xuICB1c2VyTmFtZVNlbGVjdG9yOiBzZWxlY3RvcnMucHJvZmlsZU5hbWUsXG4gIHVzZXJKb2JTZWxlY3Rvcjogc2VsZWN0b3JzLnByb2ZpbGVKb2IsXG59KTtcblxuLy8g0L/QvtC/0LDQvyDRgNC10LTQsNC60YLQvtGA0LAg0L/RgNC+0YTQuNC70Y9cbmNvbnN0IHBvcHVwV2l0aEZvcm1Qcm9maWxlID0gbmV3IFBvcHVwV2l0aEZvcm0oc2VsZWN0b3JzLnBvcHVwUHJvZmlsZSwgKHN1Ym1pdFByb2ZpbGVEYXRhKSA9PiB7XG4gIHVzZXIuc2V0VXNlckluZm8oc3VibWl0UHJvZmlsZURhdGEpO1xuICBwb3B1cFdpdGhGb3JtUHJvZmlsZS5jbG9zZVBvcHVwKCk7XG59KTtcbnBvcHVwV2l0aEZvcm1Qcm9maWxlLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbi8vINC00L7QsdCw0LLQu9C10L3QuNC1INCy0LDQu9C40LTQsNGG0LjQuCDQtNC70Y8g0YTQvtGA0LzRiyDQv9GA0L7RhNC40LvRj1xuY29uc3QgcHJvZmlsZUZvcm1WYWxpZGF0aW9uID0gbmV3IEZvcm1WYWxpZGF0b3IodmFsaWRhdGlvbkNvbmZpZywgcHJvZmlsZUZvcm0pO1xucHJvZmlsZUZvcm1WYWxpZGF0aW9uLmVuYWJsZVZhbGlkYXRpb24oKTtcblxuLy8g0L/QvtC00LrQu9GO0YfQtdC90LjQtSDRgdC70YPRiNCw0YLQtdC70Y8g0LrQvdC+0L/QutC4INC+0YLQutGA0YvRgtC40Y8g0L/QvtC/0LDQv9CwINGA0LXQtNCw0LrRgtC40YDQvtCy0LDQvdC40Y8g0L/RgNC+0YTQuNC70Y9cbmJ1dHRvbkVkaXQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gIGNvbnN0IHsgbmFtZSwgam9iIH0gPSB1c2VyLmdldFVzZXJJbmZvKCk7XG4gIG5hbWVJbnB1dC52YWx1ZSA9IG5hbWU7XG4gIGpvYklucHV0LnZhbHVlID0gam9iO1xuICBwcm9maWxlRm9ybVZhbGlkYXRpb24ucmVzZXRGb3JtKCk7XG4gIHBvcHVwV2l0aEZvcm1Qcm9maWxlLm9wZW5Qb3B1cCgpO1xufSk7XG5cbi8vINC/0L7Qv9Cw0L8g0YEg0LrQsNGA0YLQuNC90LrQvtC5INC90LAg0LLQtdGB0Ywg0Y3QutGA0LDQvVxuY29uc3QgcG9wdXBXaXRoSW1hZ2UgPSBuZXcgUG9wdXBXaXRoSW1hZ2Uoc2VsZWN0b3JzLnBvcHVwVmlld1BpY3R1cmUpO1xucG9wdXBXaXRoSW1hZ2Uuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuLy8g0YTRg9C90LrRhtC40Y8g0YHQvtC30LTQsNC90LjRjyDQutCw0YDRgtC+0YfQutC4XG5mdW5jdGlvbiBjcmVhdGVDYXJkKGl0ZW0pIHtcbiAgY29uc3QgY2FyZCA9IG5ldyBDYXJkKGl0ZW0sIHNlbGVjdG9ycy5jYXJkVGVtcGxhdGUsIHBvcHVwV2l0aEltYWdlLm9wZW5Qb3B1cCk7XG4gIGNvbnN0IGNhcmRFbGVtZW50ID0gY2FyZC5nZW5lcmF0ZUNhcmQoKTtcbiAgcmV0dXJuIGNhcmRFbGVtZW50O1xufVxuXG4vLyDRgdC+0LfQtNCw0L3QuNC1INGB0YLQsNGA0YLQvtCy0YvRhSDQutCw0YDRgtC+0YfQtdC6INC40Lcg0LzQsNGB0YHQuNCy0LBcbmNvbnN0IGNhcmRzTGlzdCA9IG5ldyBTZWN0aW9uKHtcbiAgaXRlbXM6IGluaXRpYWxDYXJkcyxcbiAgcmVuZGVyZXI6IChpdGVtKSA9PiB7XG4gICAgY29uc3QgY2FyZEVsZW1lbnQgPSBjcmVhdGVDYXJkKGl0ZW0pO1xuICAgIGNhcmRzTGlzdC5hZGRJdGVtKGNhcmRFbGVtZW50KTtcbiAgfVxufSxcbnNlbGVjdG9ycy5wbGFjZUZvckNhcmRcbik7XG5cbi8vINC+0YLRgNC40YHQvtCy0LrQsCDRgdGC0LDRgNGC0L7QstGL0YUg0LrQsNGA0YLQvtGH0LXQuiDQuNC3INC80LDRgdGB0LjQstCwXG5jYXJkc0xpc3QucmVuZGVySXRlbXMoKTtcblxuLy8g0L/QvtC/0LDQvyDQtNC+0LHQsNCy0LvQtdC90LjRjyDQutCw0YDRgtC+0YfQutC4XG5jb25zdCBwb3B1cFdpdGhGb3JtQ2FyZCA9IG5ldyBQb3B1cFdpdGhGb3JtKHNlbGVjdG9ycy5wb3B1cENhcmQsIChzdWJtaXRDYXJkKSA9PiB7XG4gIGNvbnN0IGNhcmRFbGVtZW50ID0gY3JlYXRlQ2FyZChzdWJtaXRDYXJkKTtcbiAgY2FyZHNMaXN0LmFkZEl0ZW0oY2FyZEVsZW1lbnQpO1xuICBwb3B1cFdpdGhGb3JtQ2FyZC5jbG9zZVBvcHVwKCk7XG59KTtcbnBvcHVwV2l0aEZvcm1DYXJkLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbi8vINC00L7QsdCw0LLQu9C10L3QuNC1INCy0LDQu9C40LTQsNGG0LjQuCDQtNC70Y8g0YTQvtGA0LzRiyDQtNC+0LHQsNCy0LvQtdC90LjRjyDQutCw0YDRgtC+0YfQutC4XG5jb25zdCBjYXJkRm9ybVZhbGlkYXRpb24gPSBuZXcgRm9ybVZhbGlkYXRvcih2YWxpZGF0aW9uQ29uZmlnLCBjYXJkRm9ybSk7XG5jYXJkRm9ybVZhbGlkYXRpb24uZW5hYmxlVmFsaWRhdGlvbigpO1xuXG4vLyDQv9C+0LTQutC70Y7Rh9C10L3QuNC1INGB0LvRg9GI0LDRgtC10LvRjyDQutC90L7Qv9C60Lgg0L7RgtC60YDRi9GC0LjRjyDQv9C+0L/QsNC/0LAg0LTQvtCx0LDQstC70LXQvdC40Y8g0LrQsNGA0YLQvtGH0LrQuFxuYnV0dG9uQWRkLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICBwb3B1cFdpdGhGb3JtQ2FyZC5vcGVuUG9wdXAoKTtcbiAgY2FyZEZvcm1WYWxpZGF0aW9uLnJlc2V0Rm9ybSgpO1xufSk7IiwiLy8g0LjQvNC/0L7RgNGCINGB0LXQu9C10LrRgtC+0YDQvtCyXG5pbXBvcnQgeyBzZWxlY3RvcnMgfSBmcm9tIFwiLi4vdXRpbHMvY29uc3RhbnRzLmpzXCI7XG5cbi8vINC60LvQsNGB0YEg0Y7Qt9C10YDQuNC90YTQviAtINC+0YLQstC10YfQsNC10YIg0LfQsCDRg9C/0YDQsNCy0LvQtdC90LjQtSDQvtGC0L7QsdGA0LDQttC10L3QuNC10Lwg0LjQvdGE0L7RgNC80LDRhtC40Lgg0L4g0L/QvtC70YzQt9C+0LLQsNGC0LXQu9C1INC90LAg0YHRgtGA0LDQvdC40YbQtVxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlckluZm8ge1xuICAvLyDQutC+0L3RgdGC0YDRg9C60YLQvtGAINC60LvQsNGB0YHQsFxuICBjb25zdHJ1Y3Rvcih7IHVzZXJOYW1lU2VsZWN0b3IsIHVzZXJKb2JTZWxlY3RvciB9KSB7XG4gICAgdGhpcy5fdXNlck5hbWVTZWxlY3RvciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodXNlck5hbWVTZWxlY3Rvcik7XG4gICAgdGhpcy5fdXNlckpvYlNlbGVjdG9yID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih1c2VySm9iU2VsZWN0b3IpO1xuICB9XG5cbiAgLy8g0LzQtdGC0L7QtCDQutC+0YLQvtGA0YvQuSDQstC+0LfQstGA0LDRidCw0LXRgiDQvtCx0YrQtdC60YIg0YEg0LTQsNC90L3Ri9C80Lgg0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GPXG4gIGdldFVzZXJJbmZvKCkge1xuICAgIHJldHVybiB7XG4gICAgICBuYW1lOiB0aGlzLl91c2VyTmFtZVNlbGVjdG9yLnRleHRDb250ZW50LFxuICAgICAgam9iOiB0aGlzLl91c2VySm9iU2VsZWN0b3IudGV4dENvbnRlbnQsXG4gICAgfTtcbiAgfVxuXG4gIC8vINC80LXRgtC+0LQg0LrQvtGC0L7RgNGL0Lkg0L/RgNC40L3QuNC80LDQtdGCINC90L7QstGL0LUg0LTQsNC90L3Ri9C1INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRjyDQuCDQtNC+0LHQsNCy0LvRj9C10YIg0LjRhSDQvdCwINGB0YLRgNCw0L3QuNGG0YNcbiAgc2V0VXNlckluZm8oZGF0YSkge1xuICAgIHRoaXMuX3VzZXJOYW1lU2VsZWN0b3IudGV4dENvbnRlbnQgPSBkYXRhLm5hbWU7XG4gICAgdGhpcy5fdXNlckpvYlNlbGVjdG9yLnRleHRDb250ZW50ID0gZGF0YS5qb2I7XG4gIH1cbn0iXSwibmFtZXMiOlsiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwidW5kZWZpbmVkIiwiZXhwb3J0cyIsIm1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJtIiwibyIsIm9iaiIsInByb3AiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJwIiwiYiIsImRvY3VtZW50IiwiYmFzZVVSSSIsInNlbGYiLCJsb2NhdGlvbiIsImhyZWYiLCJjYXJkVGVtcGxhdGVTZWxlY3RvcnMiLCJzZWxlY3RvcnMiLCJ2YWxpZGF0aW9uQ29uZmlnIiwiZm9ybVNlbGVjdG9yIiwiaW5wdXRTZWxlY3RvciIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsImlucHV0RXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJwcm9maWxlRm9ybSIsInF1ZXJ5U2VsZWN0b3IiLCJidXR0b25FZGl0IiwibmFtZUlucHV0Iiwiam9iSW5wdXQiLCJjYXJkRm9ybSIsImJ1dHRvbkFkZCIsImluaXRpYWxDYXJkcyIsInBsYWNlIiwicGljdHVyZVVybCIsIlVSTCIsIlBvcHVwIiwicG9wdXBTZWxlY3RvciIsImV2dCIsImtleSIsImNsb3NlUG9wdXAiLCJ0YXJnZXQiLCJtb2RhbCIsImNsb3Nlc3QiLCJjbGFzc0xpc3QiLCJjb250YWlucyIsInRoaXMiLCJfcG9wdXBTZWxlY3RvciIsIl9wb3B1cCIsImFkZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJfY2xvc2VQb3B1cE9uRXNjIiwicmVtb3ZlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIl9jbG9zZVBvcHVwQnlDbGljayIsIlBvcHVwV2l0aEltYWdlIiwiX3BvcHVwSW1nUGljdHVyZSIsInNyYyIsImFsdCIsIl90aXRsZU9mUG9wdXBJbWciLCJ0ZXh0Q29udGVudCIsIlBvcHVwV2l0aEZvcm0iLCJoYW5kbGVTdWJtaXRGb3JtIiwiX2hhbmRsZVN1Ym1pdEZvcm0iLCJfZm9ybSIsIl9pbnB1dExpc3QiLCJBcnJheSIsImZyb20iLCJxdWVyeVNlbGVjdG9yQWxsIiwicmVzZXQiLCJfZm9ybVZhbHVlcyIsImZvckVhY2giLCJpbnB1dEVsZW1lbnQiLCJuYW1lIiwidmFsdWUiLCJwcmV2ZW50RGVmYXVsdCIsIl9nZXRJbnB1dFZhbHVlcyIsIkNhcmQiLCJ0ZW1wbGF0ZVNlbGVjdG9yIiwiaGFuZGxlT3BlbkJpZ0ltYWdlIiwiX25hbWUiLCJfbGluayIsIl90ZW1wbGF0ZVNlbGVjdG9yIiwiY29udGVudCIsImNsb25lTm9kZSIsIl9jYXJkRWxlbWVudCIsIl9nZXRDYXJkRWxlbWVudCIsImNhcmRQaWN0dXJlIiwiX3NldEV2ZW50TGlzdGVuZXJzIiwiX29wZW5WaWV3UGljdHVyZSIsIl9saWtlQ2FyZCIsIl9kZWxldGVDYXJkIiwidG9nZ2xlIiwiRm9ybVZhbGlkYXRvciIsImZvcm1FbCIsInNvbWUiLCJ2YWxpZGl0eSIsInZhbGlkIiwiX2Zvcm1TZWxlY3RvciIsIl9pbnB1dFNlbGVjdG9yIiwiX3N1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiX2luYWN0aXZlQnV0dG9uQ2xhc3MiLCJfaW5wdXRFcnJvckNsYXNzIiwiX2Vycm9yQ2xhc3MiLCJfZm9ybUVsIiwiX2J1dHRvbkVsZW1lbnQiLCJlcnJvck1lc3NhZ2UiLCJlcnJvckVsZW1lbnQiLCJpZCIsIl9oaWRlSW5wdXRFcnJvciIsIl9zaG93SW5wdXRFcnJvciIsInZhbGlkYXRpb25NZXNzYWdlIiwic2V0QXR0cmlidXRlIiwicmVtb3ZlQXR0cmlidXRlIiwiX2hhc0ludmFsaWRJbnB1dCIsIl9kaXNhYmxlQnV0dG9uU3RhdGUiLCJfZW5hYmxlQnV0dG9uU3RhdGUiLCJfdG9nZ2xlQnV0dG9uU3RhdGUiLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwiU2VjdGlvbiIsInNlbGVjdG9yIiwiaXRlbXMiLCJyZW5kZXJlciIsIl9yZW5kZXJlZEl0ZW1zIiwiX3JlbmRlcmVyIiwiX2NvbnRhaW5lciIsIml0ZW0iLCJlbGVtZW50IiwicHJlcGVuZCIsInVzZXIiLCJVc2VySW5mbyIsInVzZXJOYW1lU2VsZWN0b3IiLCJ1c2VySm9iU2VsZWN0b3IiLCJfdXNlck5hbWVTZWxlY3RvciIsIl91c2VySm9iU2VsZWN0b3IiLCJqb2IiLCJkYXRhIiwicG9wdXBXaXRoRm9ybVByb2ZpbGUiLCJzdWJtaXRQcm9maWxlRGF0YSIsInNldFVzZXJJbmZvIiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJwcm9maWxlRm9ybVZhbGlkYXRpb24iLCJlbmFibGVWYWxpZGF0aW9uIiwiZ2V0VXNlckluZm8iLCJyZXNldEZvcm0iLCJvcGVuUG9wdXAiLCJwb3B1cFdpdGhJbWFnZSIsImNyZWF0ZUNhcmQiLCJnZW5lcmF0ZUNhcmQiLCJjYXJkc0xpc3QiLCJjYXJkRWxlbWVudCIsImFkZEl0ZW0iLCJyZW5kZXJJdGVtcyIsInBvcHVwV2l0aEZvcm1DYXJkIiwic3VibWl0Q2FyZCIsImNhcmRGb3JtVmFsaWRhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=