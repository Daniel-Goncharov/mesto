(()=>{"use strict";var e="element__like-button_active",t=".popup_type_profile",n=".profile__name",r=".profile__job",o=".popup_type_add-card",i="popup_opened",u=".popup__button",a=".popup_type_view-picture",c=".popup__picture",s=".popup__picture-title",l={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},p=document.querySelector(".popup__form_type_profile"),f=document.querySelector(".popup__form_type_add-avatar"),h=document.querySelector(".profile__avatar-button"),d=document.querySelector(".profile__edit-button"),_=(document.querySelector(t).querySelector(u),document.querySelector(".popup__input_data_name"),document.querySelector(".popup__input_data_job"),document.querySelector(n),document.querySelector(r),document.querySelector(".popup__form_type_add-card")),y=document.querySelector(".profile__add-button");function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}document.querySelector(o),document.querySelector(".popup__input_data_place-name"),document.querySelector(".popup__input_data_place-url"),document.querySelector(a),document.querySelector(c),document.querySelector(s);var v=function(){function e(t){var n,r,o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=function(e){"Escape"===e.key&&o.closePopup()},(n="_closePopupOnEsc")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._popupSelector=t,this._popup=document.querySelector(t),this._closePopupOnEsc=this._closePopupOnEsc.bind(this)}var t,n;return t=e,(n=[{key:"openPopup",value:function(){this._popup.classList.add(i),document.addEventListener("keydown",this._closePopupOnEsc)}},{key:"closePopup",value:function(){this._popup.classList.remove(i),document.removeEventListener("keydown",this._closePopupOnEsc)}},{key:"_closePopupByClick",value:function(e){(e.target.classList.contains("popup__closed-button")||e.target.classList.contains("popup"))&&this.closePopup()}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("mousedown",(function(t){e._closePopupByClick(t)}))}}])&&b(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function m(e){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},m(e)}function k(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function g(){return g="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=E(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},g.apply(this,arguments)}function E(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=P(e)););return e}function w(e,t){return w=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},w(e,t)}function S(e,t){if(t&&("object"===m(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function P(e){return P=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},P(e)}var O=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&w(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=P(r);if(o){var n=P(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return S(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e))._popupImgPicture=t._popup.querySelector(c),t._titleOfPopupImg=t._popup.querySelector(s),t}return t=u,(n=[{key:"openPopup",value:function(e,t){g(P(u.prototype),"openPopup",this).call(this),this._popupImgPicture.alt=e,this._titleOfPopupImg.textContent=e,this._popupImgPicture.src=t}}])&&k(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(v);function L(e){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},L(e)}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function j(){return j="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=I(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},j.apply(this,arguments)}function I(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=R(e)););return e}function B(e,t){return B=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},B(e,t)}function q(e,t){if(t&&("object"===L(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function R(e){return R=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},R(e)}var T=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&B(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=R(r);if(o){var n=R(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return q(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._handleSubmitForm=t,n._form=n._popup.querySelector(".popup__form"),n._submitButton=n._form.querySelector(u),n._permanentText=n._submitButton.textContent,n._inputList=Array.from(n._popup.querySelectorAll(".popup__input")),n}return t=a,(n=[{key:"closePopup",value:function(){this._form.reset(),j(R(a.prototype),"closePopup",this).call(this)}},{key:"setInputValues",value:function(e){this._inputList.forEach((function(t){t.value=e[t.name]}))}},{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;j(R(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleSubmitForm(e._getInputValues())}))}},{key:"renderLoading",value:function(e){this._submitButton.textContent=e?"Сохранение...":this._permanentText}}])&&C(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(v);function x(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var U=function(){function t(e,n,r,o,i,u){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._data=e,this.cardId=e._id,this._name=e.name,this._link=e.link,this._likes=e.likes,this._ownerId=e.owner._id,this._handleOpenBigImage=n,this._handleLikeClick=r,this._handleTrashBinClick=o,this._templateSelector=i,this._myId=u}var n,r;return n=t,(r=[{key:"_getCardElement",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".element").cloneNode(!0)}},{key:"updateLikeCounter",value:function(e){this._likes=e.likes}},{key:"updateLikesView",value:function(){this._likeCounter.textContent=this._likes.length,this.isLiked()?this._likeButton.classList.add(e):this._likeButton.classList.remove(e)}},{key:"isLiked",value:function(){var e=this;return this._likes.some((function(t){return t._id===e._myId}))}},{key:"generateCard",value:function(){return this._cardElement=this._getCardElement(),this._cardPicture=this._cardElement.querySelector(".element__picture"),this._cardTitle=this._cardElement.querySelector(".element__title"),this._cardPicture.src=this._link,this._cardPicture.alt=this._name,this._cardTitle.textContent=this._name,this._trashBin=this._cardElement.querySelector(".element__delete"),this._likeCounter=this._cardElement.querySelector(".element__like-counter"),this._likeButton=this._cardElement.querySelector(".element__like-button"),this._likeCounter.textContent=this._likes.length,this._ownerId!=this._myId&&this._trashBin.remove(),this.isLiked()&&this._likeButton.classList.add(e),this._setEventListeners(),this._cardElement}},{key:"_setEventListeners",value:function(){var e=this;this._cardPicture.addEventListener("click",(function(){return e._handleOpenBigImage(e._name,e._link)})),this._likeButton.addEventListener("click",(function(){return e._handleLikeClick(e)})),this._trashBin.addEventListener("click",(function(){return e._handleTrashBinClick(e)}))}},{key:"deleteCard",value:function(){this._cardElement.remove(),this._cardElement=null}}])&&x(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function A(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var V=function(){function e(t,n){var r,o,i=this,u=t.formSelector,a=t.inputSelector,c=t.submitButtonSelector,s=t.inactiveButtonClass,l=t.inputErrorClass,p=t.errorClass;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),o=function(){return i._inputList.some((function(e){return!e.validity.valid}))},(r="_hasInvalidInput")in this?Object.defineProperty(this,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):this[r]=o,this._formSelector=u,this._inputSelector=a,this._submitButtonSelector=c,this._inactiveButtonClass=s,this._inputErrorClass=l,this._errorClass=p,this._formEl=n,this._inputList=Array.from(this._formEl.querySelectorAll(this._inputSelector)),this._buttonElement=this._formEl.querySelector(this._submitButtonSelector)}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e,t){var n=this._formEl.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),n.classList.add(this._errorClass),n.textContent=t}},{key:"_hideInputError",value:function(e){var t=this._formEl.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_disableButtonState",value:function(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.setAttribute("disabled","disabled")}},{key:"_enableButtonState",value:function(){this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.removeAttribute("disabled")}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this._disableButtonState():this._enableButtonState()}},{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t)}))}},{key:"_setEventListeners",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._formEl.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}])&&A(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function D(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var N=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){var n=t._renderer(e);t.addAppendItem(n)}))}},{key:"addAppendItem",value:function(e){this._container.append(e)}},{key:"addPrependItem",value:function(e){this._container.prepend(e)}}])&&D(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function J(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var F=function(){function e(t){var n=t.userName,r=t.userJob,o=t.userAvatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userName=document.querySelector(n),this._userJob=document.querySelector(r),this._avatar=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._userName.textContent,about:this._userJob.textContent,avatar:this._avatar.src}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about,r=e.avatar,o=e._id;this._userName.textContent=t,this._userJob.textContent=n,this._avatar.src=r,this._myId=o}},{key:"returnMyId",value:function(){return this._myId}}])&&J(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function M(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var G=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=t.baseUrl,this._headers=t.headers}var t,n;return t=e,(n=[{key:"_checkResponse",value:function(e){return e.ok?e.json():Promise.reject("Упс, ошибка ".concat(e.status,", что-то пошло не так."))}},{key:"getUserInfo",value:function(){return fetch("".concat(this._baseUrl,"users/me"),{method:"GET",headers:this._headers}).then(this._checkResponse)}},{key:"changeUserInfo",value:function(e){var t=e.name,n=e.about;return fetch("".concat(this._baseUrl,"users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:n})}).then(this._checkResponse)}},{key:"changeAvatar",value:function(e){var t=e.avatar;return fetch("".concat(this._baseUrl,"users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then(this._checkResponse)}},{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"cards"),{method:"GET",headers:this._headers}).then(this._checkResponse)}},{key:"addCardServer",value:function(e){return fetch("".concat(this._baseUrl,"cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then(this._checkResponse)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._baseUrl,"cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"addLikeToCard",value:function(e){return fetch("".concat(this._baseUrl,"cards/").concat(e,"/likes"),{method:"PUT",headers:this._headers}).then(this._checkResponse)}},{key:"deleteLikeFromCard",value:function(e){return fetch("".concat(this._baseUrl,"cards/").concat(e,"/likes"),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}}])&&M(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function H(e){return H="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},H(e)}function z(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function $(){return $="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=K(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},$.apply(this,arguments)}function K(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=X(e)););return e}function Q(e,t){return Q=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Q(e,t)}function W(e,t){if(t&&("object"===H(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function X(e){return X=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},X(e)}var Y=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Q(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=X(r);if(o){var n=X(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return W(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._form=n._popup.querySelector(".popup__container_type_delete"),n._submitButton=n._form.querySelector(u),n._handleSubmitForm=t,n._permanentText=n._submitButton.textContent,n}return t=a,(n=[{key:"openPopup",value:function(e){$(X(a.prototype),"openPopup",this).call(this),this._card=e}},{key:"renderLoading",value:function(e){this._submitButton.textContent=e?"Удаление...":this._permanentText}},{key:"setEventListeners",value:function(){var e=this;this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleSubmitForm(e._card)})),$(X(a.prototype),"setEventListeners",this).call(this)}}])&&z(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(v);function Z(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var ee=new G({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-51/",headers:{authorization:"bfa40ffc-a9e7-4ab6-8334-2b3f41f7694b","content-Type":"application/json"}});Promise.all([ee.getUserInfo(),ee.getInitialCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],u=!0,a=!1;try{for(n=n.call(e);!(u=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);u=!0);}catch(e){a=!0,o=e}finally{try{u||null==n.return||n.return()}finally{if(a)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return Z(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Z(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];ie.setUserInfo(o),te.renderItems(i)})).catch((function(e){alert(e)}));var te=new N({renderer:ue},".elements__container"),ne=new V(l,p);ne.enableValidation();var re=new V(l,_);re.enableValidation();var oe=new V(l,f);oe.enableValidation();var ie=new F({userName:n,userJob:r,userAvatar:".profile__pic"});function ue(e){return new U(e,fe,he,de,".template",ie.returnMyId()).generateCard()}var ae=new O(a);ae.setEventListeners();var ce=new T(t,(function(e){ce.renderLoading(!0),ee.changeUserInfo(e).then((function(e){ie.setUserInfo(e),ce.closePopup()})).catch((function(e){alert(e)})).finally((function(){ce.renderLoading(!1)}))}));ce.setEventListeners();var se=new T(o,(function(e){se.renderLoading(!0),ee.addCardServer(e).then((function(e){te.addPrependItem(ue(e)),se.closePopup()})).catch((function(e){alert(e)})).finally((function(){se.renderLoading(!1)}))}));se.setEventListeners();var le=new T(".popup_type_add-avatar",(function(e){le.renderLoading(!0),ee.changeAvatar(e).then((function(e){ie.setUserInfo(e),le.closePopup()})).catch((function(e){return console.log(e)})).finally((function(){le.renderLoading(!1)}))}));le.setEventListeners();var pe=new Y(".popup_type_delete",(function(e){pe.renderLoading(!0),ee.deleteCard(e.cardId).then((function(){e.deleteCard(),pe.closePopup()})).catch((function(e){alert(e)})).finally((function(){pe.renderLoading(!1)}))}));function fe(e,t){ae.openPopup(e,t)}function he(e){e.isLiked()?ee.deleteLikeFromCard(e.cardId).then((function(t){e.updateLikeCounter(t),e.updateLikesView()})).catch((function(e){alert(e)})):ee.addLikeToCard(e.cardId).then((function(t){e.updateLikeCounter(t),e.updateLikesView()})).catch((function(e){alert(e)}))}function de(e){pe.openPopup(e)}pe.setEventListeners(),h.addEventListener("click",(function(){oe.resetValidation(),le.openPopup()})),d.addEventListener("click",(function(){ce.setInputValues(ie.getUserInfo()),ne.resetValidation(),ce.openPopup()})),y.addEventListener("click",(function(){re.resetValidation(),se.openPopup()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,